#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∂–∞–Ω—Ä–æ–≤ –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∏—Ö —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏
"""

from database.database import get_session
from models import Concert, Genre, ConcertGenreLink
from sqlmodel import select
from collections import defaultdict

def create_genres_and_links():
    """–°–æ–∑–¥–∞–µ—Ç –∂–∞–Ω—Ä—ã –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç –∏—Ö —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏"""
    session = next(get_session())
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã –∏–∑ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
        concerts = session.exec(select(Concert)).all()
        
        # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã
        unique_genres = set()
        for concert in concerts:
            if concert.genre:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∂–∞–Ω—Ä –∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ (–Ω–µ —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º)
                unique_genres.add(concert.genre.strip())
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(unique_genres)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤:")
        for genre_name in sorted(unique_genres):
            print(f"  - {genre_name}")
        
        # –°–æ–∑–¥–∞–µ–º –∂–∞–Ω—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        genre_map = {}
        for genre_name in unique_genres:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∂–∞–Ω—Ä
            existing_genre = session.exec(
                select(Genre).where(Genre.name == genre_name)
            ).first()
            
            if existing_genre:
                genre_map[genre_name] = existing_genre
                print(f"–ñ–∞–Ω—Ä '{genre_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_genre.id})")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∂–∞–Ω—Ä
                new_genre = Genre(name=genre_name)
                session.add(new_genre)
                session.commit()
                session.refresh(new_genre)
                genre_map[genre_name] = new_genre
                print(f"–°–æ–∑–¥–∞–Ω –∂–∞–Ω—Ä '{genre_name}' (ID: {new_genre.id})")
        
        # –°–≤—è–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã —Å –∂–∞–Ω—Ä–∞–º–∏
        links_created = 0
        for concert in concerts:
            if concert.genre:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∂–∞–Ω—Ä –∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ
                genre_name = concert.genre.strip()
                
                if genre_name in genre_map:
                    genre = genre_map[genre_name]
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–≤—è–∑—å
                    existing_link = session.exec(
                        select(ConcertGenreLink).where(
                            ConcertGenreLink.concert_id == concert.id,
                            ConcertGenreLink.genre_id == genre.id
                        )
                    ).first()
                    
                    if not existing_link:
                        # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å
                        link = ConcertGenreLink(
                            concert_id=concert.id,
                            genre_id=genre.id
                        )
                        session.add(link)
                        links_created += 1
        
        session.commit()
        print(f"\n–°–æ–∑–¥–∞–Ω–æ {links_created} —Å–≤—è–∑–µ–π –∫–æ–Ω—Ü–µ—Ä—Ç-–∂–∞–Ω—Ä")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_genres = len(genre_map)
        total_concerts = len(concerts)
        concerts_with_genres = sum(1 for c in concerts if c.genre)
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∂–∞–Ω—Ä–æ–≤: {total_genres}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {total_concerts}")
        print(f"  ‚Ä¢ –ö–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –∂–∞–Ω—Ä–∞–º–∏: {concerts_with_genres}")
        print(f"  ‚Ä¢ –°–≤—è–∑–µ–π —Å–æ–∑–¥–∞–Ω–æ: {links_created}")
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        session.rollback()
        return False
    finally:
        session.close()

if __name__ == "__main__":
    print("üéµ –°–æ–∑–¥–∞–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤ –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏...")
    success = create_genres_and_links()
    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∂–∞–Ω—Ä–æ–≤") 