#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import (
    find_available_off_program_events,
    find_available_off_program_events_before_first_concert,
    find_available_off_program_events_after_last_concert
)
from models import OffProgram, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def test_off_program_sorting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞"""
    
    try:
        session = next(get_session())
        
        print("üß™ –¢–ï–°–¢ –°–û–†–¢–ò–†–û–í–ö–ò –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´ –ü–û –í–†–ï–ú–ï–ù–ò –ù–ê–ß–ê–õ–ê")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        off_program_events = session.exec(select(OffProgram).order_by(OffProgram.event_date)).all()
        print(f"üìä –í—Å–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã: {len(off_program_events)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã
        concerts = session.exec(select(Concert).order_by(Concert.datetime)).all()
        print(f"üéµ –í—Å–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {len(concerts)}")
        
        if len(concerts) < 2:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏
        print(f"\nüîç –¢–ï–°–¢ 1: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏")
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        concert1 = concerts[0]
        concert2 = concerts[1]
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        current_concert = {
            'concert': {
                'datetime': concert1.datetime,
                'duration': concert1.duration,
                'hall': {'id': concert1.hall_id}
            }
        }
        
        next_concert = {
            'concert': {
                'datetime': concert2.datetime,
                'duration': concert2.duration,
                'hall': {'id': concert2.hall_id}
            }
        }
        
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 1: {concert1.datetime.strftime('%H:%M')} - {concert1.name}")
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 2: {concert2.datetime.strftime('%H:%M')} - {concert2.name}")
        
        # –ò—â–µ–º –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—É –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏
        off_program_between = find_available_off_program_events(session, current_concert, next_concert)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏: {len(off_program_between)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
        if len(off_program_between) > 1:
            print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞:")
            for i, event in enumerate(off_program_between):
                print(f"  {i+1}. {event['event_date_display']} - {event['event_name']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –∏–¥–µ—Ç –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
            is_sorted = True
            for i in range(len(off_program_between) - 1):
                if off_program_between[i]['event_date'] > off_program_between[i+1]['event_date']:
                    is_sorted = False
                    break
            
            if is_sorted:
                print("‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            else:
                print("‚ùå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏ –ù–ï–ö–û–†–†–ï–ö–¢–ù–ê")
        else:
            print("‚ÑπÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        print(f"\nüîç –¢–ï–°–¢ 2: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞")
        
        first_concert = {
            'concert': {
                'datetime': concert1.datetime,
                'duration': concert1.duration,
                'hall': {'id': concert1.hall_id}
            }
        }
        
        off_program_before = find_available_off_program_events_before_first_concert(session, first_concert)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(off_program_before)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
        if len(off_program_before) > 1:
            print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞:")
            for i, event in enumerate(off_program_before):
                print(f"  {i+1}. {event['event_date_display']} - {event['event_name']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –∏–¥–µ—Ç –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
            is_sorted = True
            for i in range(len(off_program_before) - 1):
                if off_program_before[i]['event_date'] > off_program_before[i+1]['event_date']:
                    is_sorted = False
                    break
            
            if is_sorted:
                print("‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            else:
                print("‚ùå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –ù–ï–ö–û–†–†–ï–ö–¢–ù–ê")
        else:
            print("‚ÑπÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        print(f"\nüîç –¢–ï–°–¢ 3: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞")
        
        last_concert = {
            'concert': {
                'datetime': concert2.datetime,
                'duration': concert2.duration,
                'hall': {'id': concert2.hall_id}
            }
        }
        
        off_program_after = find_available_off_program_events_after_last_concert(session, last_concert)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(off_program_after)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
        if len(off_program_after) > 1:
            print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞:")
            for i, event in enumerate(off_program_after):
                print(f"  {i+1}. {event['event_date_display']} - {event['event_name']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –∏–¥–µ—Ç –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
            is_sorted = True
            for i in range(len(off_program_after) - 1):
                if off_program_after[i]['event_date'] > off_program_after[i+1]['event_date']:
                    is_sorted = False
                    break
            
            if is_sorted:
                print("‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            else:
                print("‚ùå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –ù–ï–ö–û–†–†–ï–ö–¢–ù–ê")
        else:
            print("‚ÑπÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
        print(f"\nüìÖ –í–°–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´ (—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏):")
        for i, event in enumerate(off_program_events[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            recommend_status = "‚≠ê" if event.recommend else "‚¨ú"
            print(f"  {i:2d}. {event.event_date.strftime('%H:%M')} {recommend_status} {event.event_name}")
        
        print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_off_program_sorting() 