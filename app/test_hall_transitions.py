#!/usr/bin/env python3
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from models import Hall, HallTransition
from sqlmodel import select
import pandas as pd
from config_data_path import HALLS_TRANSITIONS_PATH

def test_hall_transitions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É –∑–∞–ª–∞–º–∏"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É –∑–∞–ª–∞–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(HALLS_TRANSITIONS_PATH):
        print(f"‚ùå –§–∞–π–ª {HALLS_TRANSITIONS_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        print("üìñ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É –∑–∞–ª–∞–º–∏...")
        df = pd.read_excel(HALLS_TRANSITIONS_PATH)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ {df.shape}")
        print(f"   –ö–æ–ª–æ–Ω–∫–∏: {df.columns.tolist()}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        session = next(get_session())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ª–æ–≤
        halls = session.exec(select(Hall)).all()
        print(f"‚úÖ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(halls)} –∑–∞–ª–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
        transitions = session.exec(select(HallTransition)).all()
        print(f"‚úÖ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(transitions)} –∑–∞–ø–∏—Å–µ–π –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö")
        
        if transitions:
            print("\nüìä –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ—Ö–æ–¥–æ–≤:")
            for i, transition in enumerate(transitions[:5]):
                from_hall = session.exec(select(Hall).where(Hall.id == transition.from_hall_id)).first()
                to_hall = session.exec(select(Hall).where(Hall.id == transition.to_hall_id)).first()
                print(f"  {i+1}. {from_hall.name} ‚Üí {to_hall.name}: {transition.transition_time} –º–∏–Ω")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞: {sum(t.transition_time for t in transitions) / len(transitions):.1f} –º–∏–Ω")
            print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {min(t.transition_time for t in transitions)} –º–∏–Ω")
            print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {max(t.transition_time for t in transitions)} –º–∏–Ω")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ")
            print("üí° –ù—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_hall_transitions() 