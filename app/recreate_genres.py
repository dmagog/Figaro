#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∂–∞–Ω—Ä–æ–≤ —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π (–±–µ–∑ —Ä–∞–∑–±–∏–≤–∫–∏ –ø–æ –∑–∞–ø—è—Ç—ã–º)
"""

from database.database import get_session
from models import Concert, Genre, ConcertGenreLink
from sqlmodel import select, delete
from sqlalchemy import func

def recreate_genres():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –∂–∞–Ω—Ä—ã —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π"""
    session = next(get_session())
    
    try:
        print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏ –∂–∞–Ω—Ä-–∫–æ–Ω—Ü–µ—Ä—Ç...")
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏
        session.exec(delete(ConcertGenreLink))
        session.commit()
        
        print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∂–∞–Ω—Ä—ã...")
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∂–∞–Ω—Ä—ã
        session.exec(delete(Genre))
        session.commit()
        
        print("üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∂–∞–Ω—Ä—ã —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã
        concerts = session.exec(select(Concert)).all()
        
        # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã (–∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ)
        unique_genres = set()
        for concert in concerts:
            if concert.genre:
                unique_genres.add(concert.genre.strip())
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(unique_genres)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤:")
        for genre_name in sorted(unique_genres):
            print(f"  - {genre_name}")
        
        # –°–æ–∑–¥–∞–µ–º –∂–∞–Ω—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        genre_map = {}
        for genre_name in unique_genres:
            new_genre = Genre(name=genre_name)
            session.add(new_genre)
            session.commit()
            session.refresh(new_genre)
            genre_map[genre_name] = new_genre
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∂–∞–Ω—Ä '{genre_name}' (ID: {new_genre.id})")
        
        # –°–≤—è–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã —Å –∂–∞–Ω—Ä–∞–º–∏
        links_created = 0
        for concert in concerts:
            if concert.genre:
                genre_name = concert.genre.strip()
                
                if genre_name in genre_map:
                    genre = genre_map[genre_name]
                    
                    # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å
                    link = ConcertGenreLink(
                        concert_id=concert.id,
                        genre_id=genre.id
                    )
                    session.add(link)
                    links_created += 1
        
        session.commit()
        print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {links_created} —Å–≤—è–∑–µ–π –∫–æ–Ω—Ü–µ—Ä—Ç-–∫–æ–Ω—Ü–µ—Ä—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        total_concerts = len(concerts)
        total_links = session.exec(select(func.count(ConcertGenreLink.concert_id))).first()
        
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {total_concerts}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ —Å–≤—è–∑–µ–π –∂–∞–Ω—Ä-–∫–æ–Ω—Ü–µ—Ä—Ç: {total_links}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∂–∞–Ω—Ä–æ–≤: {len(genre_map)}")
        
        if total_concerts == total_links:
            print("‚úÖ –£—Å–ø–µ—Ö! –ö–∞–∂–¥—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç –∏–º–µ–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∂–∞–Ω—Ä")
        else:
            print(f"‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: {total_concerts} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤, –Ω–æ {total_links} —Å–≤—è–∑–µ–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        session.rollback()
        return False
    finally:
        session.close()

if __name__ == "__main__":
    print("üéµ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤...")
    success = recreate_genres()
    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∂–∞–Ω—Ä–æ–≤") 