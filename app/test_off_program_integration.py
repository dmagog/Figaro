#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –º–∞—Ä—à—Ä—É—Ç–Ω—ã–π –ª–∏—Å—Ç
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import find_available_off_program_events
from models import OffProgram, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def test_off_program_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –º–∞—Ä—à—Ä—É—Ç–Ω—ã–π –ª–∏—Å—Ç"""
    
    try:
        session = next(get_session())
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        off_program_events = session.exec(select(OffProgram)).all()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(off_program_events)} –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã")
        
        if not off_program_events:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        concerts = session.exec(select(Concert).limit(5)).all()
        print(f"üéµ –ù–∞–π–¥–µ–Ω–æ {len(concerts)} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        if len(concerts) < 2:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
        test_concerts = []
        for i, concert in enumerate(concerts[:2]):
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª –∫–æ–Ω—Ü–µ—Ä—Ç–∞
            hall = session.exec(select(Hall).where(Hall.id == concert.hall_id)).first()
            
            concert_data = {
                'concert': {
                    'id': concert.id,
                    'name': concert.name,
                    'datetime': concert.datetime,
                    'duration': concert.duration,
                    'hall': {
                        'id': hall.id if hall else None,
                        'name': hall.name if hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                    } if hall else None
                }
            }
            test_concerts.append(concert_data)
        
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏...")
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 1: {test_concerts[0]['concert']['name']} –≤ {test_concerts[0]['concert']['datetime']}")
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 2: {test_concerts[1]['concert']['name']} –≤ {test_concerts[1]['concert']['datetime']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞
        available_events = find_available_off_program_events(
            session, 
            test_concerts[0], 
            test_concerts[1]
        )
        
        print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(available_events)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã:")
        
        for i, event in enumerate(available_events, 1):
            print(f"\n  {i}. {event['event_name']}")
            print(f"     –í—Ä–µ–º—è: {event['event_date_display']}")
            print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}")
            print(f"     –ó–∞–ª: {event['hall_name']}")
            print(f"     –§–æ—Ä–º–∞—Ç: {event['format']}")
            print(f"     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {'–î–∞' if event['recommend'] else '–ù–µ—Ç'}")
            print(f"     –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é: ~{event['walk_time_to_event']}–º")
            print(f"     –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ~{event['walk_time_from_event']}–º")
            print(f"     –û–±—â–µ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ~{event['total_walk_time']}–º")
            print(f"     –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è: {event['available_time']}–º")
            print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event['event_duration_minutes']}–º")
        
        if available_events:
            print(f"\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ {len(available_events)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
        else:
            print(f"\n‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã...")
    success = test_off_program_integration()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 