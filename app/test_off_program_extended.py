#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import (
    find_available_off_program_events_before_first_concert,
    find_available_off_program_events_after_last_concert
)
from datetime import datetime, timedelta
from models import Concert, Hall, OffProgram
from sqlalchemy import select

def test_off_program_before_first_concert():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞...")
    
    session = next(get_session())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ª
        hall = Hall(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ª",
            address="–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞, 1",
            capacity=100,
            concert_count=0
        )
        session.add(hall)
        session.commit()
        session.refresh(hall)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç –≤ 15:00
        concert_datetime = datetime.now().replace(hour=15, minute=0, second=0, microsecond=0)
        concert = Concert(
            external_id=1001,
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç",
            datetime=concert_datetime,
            duration=timedelta(hours=1, minutes=30),
            hall_id=hall.id,
            genre="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞"
        )
        session.add(concert)
        session.commit()
        session.refresh(concert)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ 13:00 (–∑–∞ 2 —á–∞—Å–∞ –¥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞)
        off_program_datetime = concert_datetime - timedelta(hours=2)
        off_program = OffProgram(
            event_num=2001,
            event_name="–¢–µ—Å—Ç–æ–≤–∞—è –ª–µ–∫—Ü–∏—è",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
            event_date=off_program_datetime,
            event_long="01:00",  # 1 —á–∞—Å
            hall_name="–ò–Ω—Ñ–æ—Ü–µ–Ω—Ç—Ä",
            format="–õ–µ–∫—Ü–∏—è",
            recommend=True
        )
        session.add(off_program)
        session.commit()
        session.refresh(off_program)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
        concert_dict = {
            'concert': {
                'datetime': concert_datetime,
                'hall': {'id': hall.id}
            }
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        events = find_available_off_program_events_before_first_concert(session, concert_dict)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(events)}")
        
        if events:
            event = events[0]
            print(f"   üìÖ –í—Ä–µ–º—è: {event['event_date_display']}")
            print(f"   üéØ –ù–∞–∑–≤–∞–Ω–∏–µ: {event['event_name']}")
            print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}")
            print(f"   üìç –ó–∞–ª: {event['hall_name']}")
            print(f"   üö∂üèº‚Äç‚û°Ô∏è –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞: {event['walk_time_to_concert']} –º–∏–Ω")
            print(f"   üïê –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è: {event['available_time']} –º–∏–Ω")
            print(f"   üè∑Ô∏è –¢–∏–ø: {event['type']}")
        else:
            print("   ‚ùå –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –û—á–∏—Å—Ç–∫–∞
        session.delete(off_program)
        session.delete(concert)
        session.delete(hall)
        session.commit()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        session.rollback()
        return False
    finally:
        session.close()

def test_off_program_after_last_concert():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞...")
    
    session = next(get_session())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ª
        hall = Hall(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ª",
            address="–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞, 1",
            capacity=100,
            concert_count=0
        )
        session.add(hall)
        session.commit()
        session.refresh(hall)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç –≤ 19:00
        concert_datetime = datetime.now().replace(hour=19, minute=0, second=0, microsecond=0)
        concert = Concert(
            external_id=1002,
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç",
            datetime=concert_datetime,
            duration=timedelta(hours=1, minutes=30),
            hall_id=hall.id,
            genre="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞"
        )
        session.add(concert)
        session.commit()
        session.refresh(concert)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ 21:00 (–ø–æ—Å–ª–µ –∫–æ–Ω—Ü–µ—Ä—Ç–∞)
        off_program_datetime = concert_datetime + timedelta(hours=2)  # 21:00
        off_program = OffProgram(
            event_num=2002,
            event_name="–í–µ—á–µ—Ä–Ω—è—è –ª–µ–∫—Ü–∏—è",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–µ—á–µ—Ä–Ω–µ–π –ª–µ–∫—Ü–∏–∏",
            event_date=off_program_datetime,
            event_long="01:00",  # 1 —á–∞—Å
            hall_name="–ò–Ω—Ñ–æ—Ü–µ–Ω—Ç—Ä",
            format="–õ–µ–∫—Ü–∏—è",
            recommend=True
        )
        session.add(off_program)
        session.commit()
        session.refresh(off_program)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
        concert_dict = {
            'concert': {
                'datetime': concert_datetime,
                'duration': timedelta(hours=1, minutes=30),
                'hall': {'id': hall.id}
            }
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        events = find_available_off_program_events_after_last_concert(session, concert_dict)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(events)}")
        
        if events:
            event = events[0]
            print(f"   üìÖ –í—Ä–µ–º—è: {event['event_date_display']}")
            print(f"   üéØ –ù–∞–∑–≤–∞–Ω–∏–µ: {event['event_name']}")
            print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}")
            print(f"   üìç –ó–∞–ª: {event['hall_name']}")
            print(f"   üö∂üèº‚Äç‚û°Ô∏è –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞: {event['walk_time_from_concert']} –º–∏–Ω")
            print(f"   üïê –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è: {event['available_time']} –º–∏–Ω")
            print(f"   üè∑Ô∏è –¢–∏–ø: {event['type']}")
        else:
            print("   ‚ùå –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –û—á–∏—Å—Ç–∫–∞
        session.delete(off_program)
        session.delete(concert)
        session.delete(hall)
        session.commit()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        session.rollback()
        return False
    finally:
        session.close()

def test_real_data():
    """–¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    session = next(get_session())
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç –∏–∑ –±–∞–∑—ã
        first_concert = session.exec(
            select(Concert).order_by(Concert.datetime)
        ).first()
        
        if not first_concert:
            print("‚ùå –ù–µ—Ç –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–Ω—Ü–µ—Ä—Ç –∏–∑ –±–∞–∑—ã
        last_concert = session.exec(
            select(Concert).order_by(Concert.datetime.desc())
        ).first()
        
        if not last_concert:
            print("‚ùå –ù–µ—Ç –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        first_hall = session.exec(
            select(Hall).where(Hall.id == first_concert.hall_id)
        ).first()
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        last_hall = session.exec(
            select(Hall).where(Hall.id == last_concert.hall_id)
        ).first()
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä—è
        first_concert_dict = {
            'concert': {
                'datetime': first_concert.datetime,
                'hall': {'id': first_concert.hall_id} if first_concert.hall_id else None
            }
        }
        
        last_concert_dict = {
            'concert': {
                'datetime': last_concert.datetime,
                'duration': last_concert.duration,
                'hall': {'id': last_concert.hall_id} if last_concert.hall_id else None
            }
        }
        
        print(f"üìÖ –ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç: {first_concert.name} –≤ {first_concert.datetime.strftime('%H:%M')}")
        print(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–Ω—Ü–µ—Ä—Ç: {last_concert.name} –≤ {last_concert.datetime.strftime('%H:%M')}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        before_events = find_available_off_program_events_before_first_concert(session, first_concert_dict)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(before_events)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        after_events = find_available_off_program_events_after_last_concert(session, last_concert_dict)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞: {len(after_events)}")
        
        if before_events:
            print("\nüìã –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞:")
            for event in before_events[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   ‚Ä¢ {event['event_date_display']} - {event['event_name']} ({event['duration']})")
        
        if after_events:
            print("\nüìã –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞:")
            for event in after_events[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   ‚Ä¢ {event['event_date_display']} - {event['event_name']} ({event['duration']})")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {e}")
        return False
    finally:
        session.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã")
    print("=" * 60)
    
    success_count = 0
    total_tests = 3
    
    # –¢–µ—Å—Ç 1: –û—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
    if test_off_program_before_first_concert():
        success_count += 1
    
    # –¢–µ—Å—Ç 2: –û—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
    if test_off_program_after_last_concert():
        success_count += 1
    
    # –¢–µ—Å—Ç 3: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if test_real_data():
        success_count += 1
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {success_count}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏") 