#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ 1 –∏ 15
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import find_available_off_program_events
from models import OffProgram, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def test_specific_concerts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö 1 –∏ 15"""
    
    try:
        session = next(get_session())
        
        print("üéØ –¢–ï–°–¢ –ö–û–ù–ö–†–ï–¢–ù–´–• –ö–û–ù–¶–ï–†–¢–û–í 1 –ò 15")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã
        concerts = session.exec(select(Concert).order_by(Concert.datetime)).all()
        
        if len(concerts) < 15:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {len(concerts)}")
            return False
        
        # –ë–µ—Ä–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã 1 –∏ 15 (–∏–Ω–¥–µ–∫—Å—ã 0 –∏ 14)
        concert1 = concerts[0]
        concert15 = concerts[14]
        
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 1: {concert1.datetime.strftime('%d.%m %H:%M')} - {concert1.name}")
        print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 15: {concert15.datetime.strftime('%d.%m %H:%M')} - {concert15.name}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª—ã
        hall1 = session.exec(select(Hall).where(Hall.id == concert1.hall_id)).first()
        hall15 = session.exec(select(Hall).where(Hall.id == concert15.hall_id)).first()
        
        print(f"–ó–∞–ª –∫–æ–Ω—Ü–µ—Ä—Ç–∞ 1: {hall1.name if hall1 else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}")
        print(f"–ó–∞–ª –∫–æ–Ω—Ü–µ—Ä—Ç–∞ 15: {hall15.name if hall15 else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫
        time_between = (concert15.datetime - concert1.datetime).total_seconds() / 60
        print(f"–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏: {time_between:.0f} –º–∏–Ω—É—Ç")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
        concert1_end = concert1.datetime + timedelta(seconds=concert1.duration.total_seconds())
        print(f"–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–æ–Ω—Ü–µ—Ä—Ç–∞ 1: {concert1_end.strftime('%H:%M')}")
        
        # –ò—â–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏
        off_program_events = session.exec(
            select(OffProgram)
            .where(OffProgram.event_date >= concert1_end)
            .where(OffProgram.event_date < concert15.datetime)
            .order_by(OffProgram.event_date)
        ).all()
        
        print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(off_program_events)} –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏:")
        
        for i, event in enumerate(off_program_events, 1):
            # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            duration_minutes = 0
            if event.event_long:
                try:
                    time_parts = str(event.event_long).split(':')
                    if len(time_parts) >= 2:
                        hours = int(time_parts[0])
                        minutes = int(time_parts[1])
                        duration_minutes = hours * 60 + minutes
                except:
                    duration_minutes = 30
            
            print(f"  {i:2d}. {event.event_date.strftime('%H:%M')} - {event.event_name}")
            print(f"       –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_minutes}–º, –ó–∞–ª: {event.hall_name}")
            print(f"       –§–æ—Ä–º–∞—Ç: {event.format.value if event.format else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é
        print(f"\nüß™ –¢–ï–°–¢–ò–†–£–ï–ú –ù–ê–®–£ –§–£–ù–ö–¶–ò–Æ:")
        
        current_concert_data = {
            'concert': {
                'id': concert1.id,
                'name': concert1.name,
                'datetime': concert1.datetime,
                'duration': concert1.duration,
                'hall': {
                    'id': hall1.id if hall1 else None,
                    'name': hall1.name if hall1 else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                } if hall1 else None
            }
        }
        
        next_concert_data = {
            'concert': {
                'id': concert15.id,
                'name': concert15.name,
                'datetime': concert15.datetime,
                'duration': concert15.duration,
                'hall': {
                    'id': hall15.id if hall15 else None,
                    'name': hall15.name if hall15 else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                } if hall15 else None
            }
        }
        
        available_events = find_available_off_program_events(
            session, 
            current_concert_data, 
            next_concert_data
        )
        
        print(f"–î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π (–ø–æ —Ñ—É–Ω–∫—Ü–∏–∏): {len(available_events)}")
        
        for event in available_events:
            print(f"  ‚úÖ {event['event_name']} ({event['event_date_display']})")
            print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}, –ó–∞–ª: {event['hall_name']}")
            print(f"     –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ~{event['total_walk_time']}–º, –î–æ—Å—Ç—É–ø–Ω–æ: {event['available_time']}–º")
            print(f"     –§–æ—Ä–º–∞—Ç: {event['format']}")
            print(f"     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {'–î–∞' if event['recommend'] else '–ù–µ—Ç'}")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤...")
    success = test_specific_concerts()
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 