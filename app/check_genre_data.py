#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∂–∞–Ω—Ä–∞—Ö –∏ –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö
"""

from database.database import get_session
from models import Concert, Genre, ConcertGenreLink
from sqlmodel import select
from sqlalchemy import func

def check_genre_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∂–∞–Ω—Ä–∞—Ö –∏ –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö"""
    session = next(get_session())
    
    try:
        # 1. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
        total_concerts = session.exec(select(func.count(Concert.id))).first()
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {total_concerts}")
        
        # 2. –ö–æ–Ω—Ü–µ—Ä—Ç—ã —Å –∂–∞–Ω—Ä–∞–º–∏
        concerts_with_genres = session.exec(
            select(func.count(Concert.id))
            .where(Concert.genre.is_not(None))
        ).first()
        print(f"üìä –ö–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –∂–∞–Ω—Ä–∞–º–∏: {concerts_with_genres}")
        
        # 3. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–µ–π –∂–∞–Ω—Ä-–∫–æ–Ω—Ü–µ—Ä—Ç
        total_links = session.exec(select(func.count(ConcertGenreLink.concert_id))).first()
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–µ–π –∂–∞–Ω—Ä-–∫–æ–Ω—Ü–µ—Ä—Ç: {total_links}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å–≤—è–∑–∏
        duplicate_links = session.exec(
            select(ConcertGenreLink.concert_id, func.count(ConcertGenreLink.concert_id))
            .group_by(ConcertGenreLink.concert_id)
            .having(func.count(ConcertGenreLink.concert_id) > 1)
        ).all()
        
        if duplicate_links:
            print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(duplicate_links)} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∂–∞–Ω—Ä–∞–º–∏:")
            for concert_id, count in duplicate_links:
                print(f"   –ö–æ–Ω—Ü–µ—Ä—Ç {concert_id}: {count} –∂–∞–Ω—Ä–æ–≤")
        else:
            print("‚úÖ –í—Å–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏–º–µ—é—Ç —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∂–∞–Ω—Ä")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã –±–µ–∑ –∂–∞–Ω—Ä–æ–≤
        concerts_without_genres = session.exec(
            select(Concert.id, Concert.name, Concert.genre)
            .where(Concert.genre.is_(None))
        ).all()
        
        if concerts_without_genres:
            print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(concerts_without_genres)} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –±–µ–∑ –∂–∞–Ω—Ä–æ–≤:")
            for concert in concerts_without_genres[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   –ö–æ–Ω—Ü–µ—Ä—Ç {concert.id}: {concert.name}")
            if len(concerts_without_genres) > 5:
                print(f"   ... –∏ –µ—â–µ {len(concerts_without_genres) - 5} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤")
        else:
            print("‚úÖ –í—Å–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏–º–µ—é—Ç –∂–∞–Ω—Ä—ã")
        
        # 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∂–∞–Ω—Ä–∞–º
        genres_stats = session.exec(
            select(
                Genre.name,
                func.count(ConcertGenreLink.concert_id).label('concerts_count')
            )
            .outerjoin(ConcertGenreLink, Genre.id == ConcertGenreLink.genre_id)
            .group_by(Genre.id, Genre.name)
            .order_by(func.count(ConcertGenreLink.concert_id).desc())
        ).all()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∂–∞–Ω—Ä–∞–º:")
        total_performances = 0
        for genre_name, concerts_count in genres_stats:
            print(f"   {genre_name}: {concerts_count} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤")
            total_performances += concerts_count
        
        print(f"\nüìä –ò—Ç–æ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π: {total_performances}")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        if total_links != total_performances:
            print(f"‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: total_links ({total_links}) != total_performances ({total_performances})")
        else:
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã: {total_links} = {total_performances}")
        
        # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ü–µ—Ä—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∂–∞–Ω—Ä–∞–º–∏ –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        concerts_with_multiple_genres = session.exec(
            select(Concert.id, Concert.name, Concert.genre)
            .where(Concert.genre.contains(','))
        ).all()
        
        if concerts_with_multiple_genres:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(concerts_with_multiple_genres)} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å —Å–æ—Å—Ç–∞–≤–Ω—ã–º–∏ –∂–∞–Ω—Ä–∞–º–∏:")
            for concert in concerts_with_multiple_genres[:5]:
                print(f"   –ö–æ–Ω—Ü–µ—Ä—Ç {concert.id}: {concert.name} -> {concert.genre}")
            if len(concerts_with_multiple_genres) > 5:
                print(f"   ... –∏ –µ—â–µ {len(concerts_with_multiple_genres) - 5} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤")
        else:
            print("\n‚úÖ –í—Å–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏–º–µ—é—Ç –ø—Ä–æ—Å—Ç—ã–µ –∂–∞–Ω—Ä—ã (–±–µ–∑ –∑–∞–ø—è—Ç—ã—Ö)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_genre_data() 