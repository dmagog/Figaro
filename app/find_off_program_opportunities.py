#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø–æ—Å–µ—â–µ–Ω–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import find_available_off_program_events
from models import OffProgram, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def find_off_program_opportunities():
    """–ò—â–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    try:
        session = next(get_session())
        
        print("üîç –ü–û–ò–°–ö –†–ï–ê–õ–¨–ù–´–• –í–û–ó–ú–û–ñ–ù–û–°–¢–ï–ô –ü–û–°–ï–©–ï–ù–ò–Ø –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        off_program_events = session.exec(select(OffProgram).order_by(OffProgram.event_date)).all()
        print(f"üìä –í—Å–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã: {len(off_program_events)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        if off_program_events:
            first_event = off_program_events[0]
            last_event = off_program_events[-1]
            print(f"üìÖ –û—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–∞: —Å {first_event.event_date.strftime('%d.%m %H:%M')} –¥–æ {last_event.event_date.strftime('%d.%m %H:%M')}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        concerts = session.exec(select(Concert).order_by(Concert.datetime)).all()
        print(f"üéµ –í—Å–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {len(concerts)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
        if concerts:
            first_concert = concerts[0]
            last_concert = concerts[-1]
            print(f"üìÖ –ö–æ–Ω—Ü–µ—Ä—Ç—ã: —Å {first_concert.datetime.strftime('%d.%m %H:%M')} –¥–æ {last_concert.datetime.strftime('%d.%m %H:%M')}")
        
        # –ò—â–µ–º –ø–∞—Ä—ã –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥ —Ä–∞–±–æ—Ç—ã –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        print(f"\nüîç –ü–û–ò–°–ö –ö–û–ù–¶–ï–†–¢–û–í –í –ü–ï–†–ò–û–î –†–ê–ë–û–¢–´ –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´:")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ —Ä–∞–±–æ—Ç—ã –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã (–ø—Ä–∏–º–µ—Ä–Ω–æ –¥–æ 18:00)
        off_program_end_time = datetime(2022, 7, 1, 18, 0)  # 18:00
        
        concert_pairs = []
        
        for i in range(len(concerts) - 1):
            current_concert = concerts[i]
            next_concert = concerts[i + 1]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤ –æ–¥–∏–Ω –¥–µ–Ω—å –∏ –¥–æ 18:00
            if (current_concert.datetime.date() == next_concert.datetime.date() and 
                next_concert.datetime < off_program_end_time):
                
                time_between = (next_concert.datetime - current_concert.datetime).total_seconds() / 60
                
                if time_between > 15:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –±–æ–ª—å—à–µ 15 –º–∏–Ω—É—Ç
                    concert_pairs.append((current_concert, next_concert, time_between))
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(concert_pairs)} –ø–∞—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞–º–∏ > 15 –º–∏–Ω—É—Ç –¥–æ 18:00")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã
        for i, (current_concert, next_concert, time_between) in enumerate(concert_pairs, 1):
            print(f"\nüéØ –ü–ê–†–ê {i}:")
            print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 1: {current_concert.datetime.strftime('%H:%M')} - {current_concert.name}")
            print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 2: {next_concert.datetime.strftime('%H:%M')} - {next_concert.name}")
            print(f"–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫: {time_between:.0f} –º–∏–Ω—É—Ç")
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª—ã
            current_hall = session.exec(select(Hall).where(Hall.id == current_concert.hall_id)).first()
            next_hall = session.exec(select(Hall).where(Hall.id == next_concert.hall_id)).first()
            
            print(f"–ó–∞–ª 1: {current_hall.name if current_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}")
            print(f"–ó–∞–ª 2: {next_hall.name if next_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}")
            
            # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞
            current_end = current_concert.datetime + timedelta(seconds=current_concert.duration.total_seconds())
            print(f"–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–æ–Ω—Ü–µ—Ä—Ç–∞ 1: {current_end.strftime('%H:%M')}")
            
            # –ò—â–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ
            off_program_events_in_gap = session.exec(
                select(OffProgram)
                .where(OffProgram.event_date >= current_end)
                .where(OffProgram.event_date < next_concert.datetime)
                .order_by(OffProgram.event_date)
            ).all()
            
            print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ: {len(off_program_events_in_gap)}")
            
            if off_program_events_in_gap:
                for j, event in enumerate(off_program_events_in_gap, 1):
                    print(f"  üìã {j}. {event.event_name} ({event.event_date.strftime('%H:%M')})")
                    print(f"     –ó–∞–ª: {event.hall_name}, –§–æ—Ä–º–∞—Ç: {event.format.value if event.format else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                    print(f"     –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event.event_long}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é
            current_concert_data = {
                'concert': {
                    'id': current_concert.id,
                    'name': current_concert.name,
                    'datetime': current_concert.datetime,
                    'duration': current_concert.duration,
                    'hall': {
                        'id': current_hall.id if current_hall else None,
                        'name': current_hall.name if current_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                    } if current_hall else None
                }
            }
            
            next_concert_data = {
                'concert': {
                    'id': next_concert.id,
                    'name': next_concert.name,
                    'datetime': next_concert.datetime,
                    'duration': next_concert.duration,
                    'hall': {
                        'id': next_hall.id if next_hall else None,
                        'name': next_hall.name if next_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                    } if next_hall else None
                }
            }
            
            available_events = find_available_off_program_events(
                session, 
                current_concert_data, 
                next_concert_data
            )
            
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π (–ø–æ —Ñ—É–Ω–∫—Ü–∏–∏): {len(available_events)}")
            
            for j, event in enumerate(available_events, 1):
                print(f"  ‚úÖ {j}. {event['event_name']} ({event['event_date_display']})")
                print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}, –ó–∞–ª: {event['hall_name']}")
                print(f"     –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ~{event['total_walk_time']}–º, –î–æ—Å—Ç—É–ø–Ω–æ: {event['available_time']}–º")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üîß –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π...")
    success = find_off_program_opportunities()
    if success:
        print("\n‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 