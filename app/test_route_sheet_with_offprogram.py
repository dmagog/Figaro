#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–∞—Ä—à—Ä—É—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ —Å –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–æ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import get_user_route_sheet
from models import Purchase, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def test_route_sheet_with_offprogram():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç–Ω—ã–π –ª–∏—Å—Ç —Å –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–æ–π"""
    
    try:
        session = next(get_session())
        
        print("üéØ –¢–ï–°–¢ –ú–ê–†–®–†–£–¢–ù–û–ì–û –õ–ò–°–¢–ê –° –û–§–§-–ü–†–û–ì–†–ê–ú–ú–û–ô")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–µ—Ä–≤–æ–≥–æ —Å –ø–æ–∫—É–ø–∫–∞–º–∏)
        purchases = session.exec(select(Purchase).limit(1)).all()
        
        if not purchases:
            print("‚ùå –ù–µ—Ç –ø–æ–∫—É–ø–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        test_purchase = purchases[0]
        user_external_id = test_purchase.external_id
        
        print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_external_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–Ω—ã–π –ª–∏—Å—Ç
        route_sheet = get_user_route_sheet(session, user_external_id, [])
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞:")
        print(f"   –ö–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {route_sheet['summary']['total_concerts']}")
        print(f"   –î–Ω–µ–π: {route_sheet['summary']['total_days']}")
        print(f"   –ó–∞–ª–æ–≤: {route_sheet['summary']['total_halls']}")
        print(f"   –ñ–∞–Ω—Ä–æ–≤: {route_sheet['summary']['total_genres']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã –ø–æ –¥–Ω—è–º
        concerts_by_day = route_sheet['concerts_by_day']
        print(f"\nüìÖ –ö–æ–Ω—Ü–µ—Ä—Ç—ã –ø–æ –¥–Ω—è–º:")
        
        total_off_program_events = 0
        
        for day_index, day_concerts in concerts_by_day.items():
            print(f"\n–î–µ–Ω—å {day_index}:")
            
            for i, concert in enumerate(day_concerts):
                concert_name = concert['concert']['name']
                concert_time = concert['concert']['datetime'].strftime('%H:%M')
                hall_name = concert['concert']['hall']['name'] if concert['concert']['hall'] else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                
                print(f"  {i+1}. {concert_time} - {concert_name} ({hall_name})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ—Ö–æ–¥–µ
                transition_info = concert.get('transition_info')
                if transition_info:
                    status = transition_info.get('status', 'unknown')
                    walk_time = transition_info.get('walk_time', 0)
                    print(f"     –ü–µ—Ä–µ—Ö–æ–¥: {status} (~{walk_time}–º)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
                off_program_events = concert.get('off_program_events', [])
                if off_program_events:
                    print(f"     üé≠ –î–æ—Å—Ç—É–ø–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã: {len(off_program_events)}")
                    total_off_program_events += len(off_program_events)
                    
                    for j, event in enumerate(off_program_events, 1):
                        print(f"       {j}. {event['event_name']} ({event['event_date_display']})")
                        print(f"          –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}, –ó–∞–ª: {event['hall_name']}")
                        print(f"          –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ~{event['total_walk_time']}–º")
                        print(f"          –§–æ—Ä–º–∞—Ç: {event['format']}")
                        print(f"          –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {'–î–∞' if event['recommend'] else '–ù–µ—Ç'}")
        
        print(f"\nüéâ –ò–¢–û–ì–û:")
        print(f"   –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã: {total_off_program_events}")
        
        if total_off_program_events > 0:
            print("‚úÖ –û—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –º–∞—Ä—à—Ä—É—Ç–Ω—ã–π –ª–∏—Å—Ç!")
        else:
            print("‚ÑπÔ∏è  –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞...")
    success = test_route_sheet_with_offprogram()
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 