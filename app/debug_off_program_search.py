#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–ª–∞–¥—á–∏–∫ –ø–æ–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import get_session
from routes.user import find_available_off_program_events
from models import OffProgram, Concert, Hall
from datetime import datetime, timedelta
from sqlmodel import select

def debug_off_program_search():
    """–î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    try:
        session = next(get_session())
        
        print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û–ò–°–ö–ê –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        off_program_events = session.exec(select(OffProgram).order_by(OffProgram.event_date)).all()
        print(f"üìä –í—Å–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã: {len(off_program_events)}")
        
        print("\nüìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´:")
        for i, event in enumerate(off_program_events[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  {i:2d}. {event.event_date.strftime('%d.%m %H:%M')} - {event.event_name}")
            print(f"       –ó–∞–ª: {event.hall_name}, –§–æ—Ä–º–∞—Ç: {event.format.value if event.format else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        concerts = session.exec(select(Concert).order_by(Concert.datetime)).all()
        print(f"\nüéµ –í—Å–µ–≥–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: {len(concerts)}")
        
        print("\nüìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ö–û–ù–¶–ï–†–¢–û–í:")
        for i, concert in enumerate(concerts[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            hall = session.exec(select(Hall).where(Hall.id == concert.hall_id)).first()
            hall_name = hall.name if hall else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª"
            print(f"  {i:2d}. {concert.datetime.strftime('%d.%m %H:%M')} - {concert.name}")
            print(f"       –ó–∞–ª: {hall_name}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {concert.duration}")
        
        # –ò—â–µ–º –ø–∞—Ä—ã –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞–º–∏
        print(f"\nüîç –ü–û–ò–°–ö –ö–û–ù–¶–ï–†–¢–û–í –° –ü–†–û–ú–ï–ñ–£–¢–ö–ê–ú–ò:")
        concert_pairs = []
        
        for i in range(len(concerts) - 1):
            current_concert = concerts[i]
            next_concert = concerts[i + 1]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤ –æ–¥–∏–Ω –¥–µ–Ω—å
            if current_concert.datetime.date() == next_concert.datetime.date():
                time_between = (next_concert.datetime - current_concert.datetime).total_seconds() / 60
                
                if time_between > 30:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –±–æ–ª—å—à–µ 30 –º–∏–Ω—É—Ç
                    concert_pairs.append((current_concert, next_concert, time_between))
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(concert_pairs)} –ø–∞—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ —Å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞–º–∏ > 30 –º–∏–Ω—É—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–∞—Ä—ã
        for i, (current_concert, next_concert, time_between) in enumerate(concert_pairs[:3], 1):
            print(f"\nüéØ –¢–ï–°–¢ –ü–ê–†–´ {i}:")
            print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 1: {current_concert.datetime.strftime('%H:%M')} - {current_concert.name}")
            print(f"–ö–æ–Ω—Ü–µ—Ä—Ç 2: {next_concert.datetime.strftime('%H:%M')} - {next_concert.name}")
            print(f"–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫: {time_between:.0f} –º–∏–Ω—É—Ç")
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ª—ã
            current_hall = session.exec(select(Hall).where(Hall.id == current_concert.hall_id)).first()
            next_hall = session.exec(select(Hall).where(Hall.id == next_concert.hall_id)).first()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            current_concert_data = {
                'concert': {
                    'id': current_concert.id,
                    'name': current_concert.name,
                    'datetime': current_concert.datetime,
                    'duration': current_concert.duration,
                    'hall': {
                        'id': current_hall.id if current_hall else None,
                        'name': current_hall.name if current_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                    } if current_hall else None
                }
            }
            
            next_concert_data = {
                'concert': {
                    'id': next_concert.id,
                    'name': next_concert.name,
                    'datetime': next_concert.datetime,
                    'duration': next_concert.duration,
                    'hall': {
                        'id': next_hall.id if next_hall else None,
                        'name': next_hall.name if next_hall else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ª'
                    } if next_hall else None
                }
            }
            
            # –ò—â–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
            available_events = find_available_off_program_events(
                session, 
                current_concert_data, 
                next_concert_data
            )
            
            print(f"–ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: {len(available_events)}")
            
            for j, event in enumerate(available_events, 1):
                print(f"  {j}. {event['event_name']} ({event['event_date_display']})")
                print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {event['duration']}, –ó–∞–ª: {event['hall_name']}")
                print(f"     –í—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ~{event['total_walk_time']}–º, –î–æ—Å—Ç—É–ø–Ω–æ: {event['available_time']}–º")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ñ—Ñ-–ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ä–∞–º–∫–∞–º–∏
        print(f"\nüìã –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø–• –û–§–§-–ü–†–û–ì–†–ê–ú–ú–´:")
        for i, event in enumerate(off_program_events, 1):
            # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            duration_str = "30–º"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
            if event.event_long:
                try:
                    time_parts = str(event.event_long).split(':')
                    if len(time_parts) >= 2:
                        hours = int(time_parts[0])
                        minutes = int(time_parts[1])
                        if hours > 0 and minutes > 0:
                            duration_str = f"{hours}—á {minutes}–º"
                        elif hours > 0:
                            duration_str = f"{hours}—á"
                        else:
                            duration_str = f"{minutes}–º"
                except:
                    duration_str = "30–º"
            
            print(f"  {i:2d}. {event.event_date.strftime('%d.%m %H:%M')} - {event.event_name}")
            print(f"       –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_str}, –ó–∞–ª: {event.hall_name}")
            print(f"       –§–æ—Ä–º–∞—Ç: {event.format.value if event.format else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"       –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {'–î–∞' if event.recommend else '–ù–µ—Ç'}")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üîß –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–ª–∞–¥—á–∏–∫–∞...")
    success = debug_off_program_search()
    if success:
        print("\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 