# services/crud/festival.py
from sqlmodel import Session, select
from models import Concert, FestivalDay, Genre, ConcertGenreLink
import pandas as pd
from datetime import date
from sqlalchemy import func


def get_genres_with_concerts(session: Session):
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∂–∞–Ω—Ä—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö"""
    # –ü–æ–ª—É—á–∞–µ–º –∂–∞–Ω—Ä—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
    genres_query = session.exec(
        select(Genre).order_by(Genre.name)
    ).all()
    
    genres_data = []
    for genre in genres_query:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è –∂–∞–Ω—Ä–∞
        concerts_count = session.exec(
            select(func.count(ConcertGenreLink.concert_id))
            .where(ConcertGenreLink.genre_id == genre.id)
        ).first() or 0
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö –¥–ª—è –∂–∞–Ω—Ä–∞
        concert_links = session.exec(
            select(ConcertGenreLink.concert_id)
            .where(ConcertGenreLink.genre_id == genre.id)
        ).all()
        
        concert_data = []
        if concert_links:
            concert_ids = [link for link in concert_links]
            concerts = session.exec(
                select(Concert.id, Concert.datetime)
                .where(Concert.id.in_(concert_ids))
                .order_by(Concert.datetime)
            ).all()
            concert_data = [(concert.id, concert.datetime) for concert in concerts]
        
        genres_data.append({
            'id': genre.id,
            'name': genre.name,
            'description': genre.description,
            'concerts_count': concerts_count,
            'concert_data': concert_data
        })
    
    return genres_data


def get_genres_summary(session: Session):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∂–∞–Ω—Ä–∞–º"""
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–Ω—Ä–æ–≤
    total_genres = session.exec(select(func.count(Genre.id))).first() or 0
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–Ω—Ä–æ–≤ —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏
    genres_with_concerts = session.exec(
        select(func.count(func.distinct(ConcertGenreLink.genre_id)))
    ).first() or 0
    
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π (—Å–≤—è–∑–µ–π –∂–∞–Ω—Ä-–∫–æ–Ω—Ü–µ—Ä—Ç)
    total_performances = session.exec(
        select(func.count(ConcertGenreLink.concert_id))
    ).first() or 0
    
    return {
        'total_genres': total_genres,
        'genres_with_concerts': genres_with_concerts,
        'total_performances': total_performances
    }


def generate_festival_days(session: Session):
    print("–§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–µ—Å—Ç–∏–≤–∞–ª—è...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    concerts = session.exec(select(Concert)).all()
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(concerts)} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    
    if not concerts:
        print("‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–Ω–µ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—è")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–Ω–∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    existing_days = session.exec(select(FestivalDay.day)).all()
    existing_days_set = set(existing_days)
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(existing_days_set)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–Ω–µ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—è")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ü–µ—Ä—Ç—ã –ø–æ –¥–Ω—è–º –≤ –ø–∞–º—è—Ç–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏
    days_data = {}
    for concert in concerts:
        concert_date = concert.datetime.date()
        if concert_date not in days_data:
            days_data[concert_date] = {
                'start_times': [],
                'end_times': [],
                'tickets_count': 0,
                'total_concerts': 0
            }
        
        data = days_data[concert_date]
        data['start_times'].append(concert.datetime.time())
        data['end_times'].append((concert.datetime + concert.duration).time())
        data['total_concerts'] += 1
        if concert.tickets_available:
            data['tickets_count'] += 1
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –¥–Ω–∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è
    created_days = 0
    skipped_days = 0
    
    for day_date, data in days_data.items():
        if day_date in existing_days_set:
            skipped_days += 1
            print(f"‚è≠Ô∏è –î–µ–Ω—å —Ñ–µ—Å—Ç–∏–≤–∞–ª—è {day_date} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            continue
            
        # –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        first_concert = min(data['start_times'])
        last_concert = max(data['start_times'])
        end_of_last = max(data['end_times'])
        
        festival_day = FestivalDay(
            day=day_date,
            first_concert_time=first_concert,
            last_concert_time=last_concert,
            end_of_last_concert=end_of_last,
            concert_count=data['total_concerts'],
            available_concerts=data['tickets_count']
        )
        session.add(festival_day)
        created_days += 1
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ–Ω—å —Ñ–µ—Å—Ç–∏–≤–∞–ª—è: {day_date} ({data['total_concerts']} –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–¥–Ω–∏–º –∫–æ–º–º–∏—Ç–æ–º
    if created_days > 0:
        session.commit()
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {created_days} –Ω–æ–≤—ã—Ö –¥–Ω–µ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—è")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    total_days_in_db = len(existing_days_set) + created_days
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–Ω–µ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—è:")
    print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –¥–Ω–µ–π: {created_days}")
    print(f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {skipped_days}")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –¥–Ω–µ–π –≤ –±–∞–∑–µ: {total_days_in_db}")
    
    if created_days > 0:
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–Ω–µ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ÑπÔ∏è –í—Å–µ –¥–Ω–∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ")
